{
  "timestamp": "2025-07-03T19:09:11.448851+05:30",
  "standard_file": "/Users/nishant/Documents/GitHub/terratag/test-scenarios/standards/aws-comprehensive.yaml",
  "total_resources": 5,
  "compliant_resources": 0,
  "non_compliant_resources": 5,
  "tagging_support": {
    "total_resources_analyzed": 5,
    "resources_supporting_tags": 5,
    "resources_not_supporting_tags": 0,
    "tagging_support_rate": 1,
    "service_breakdown": {
      "instance": {
        "total_resources": 1,
        "taggable_resources": 1,
        "tagging_rate": 1
      },
      "s3": {
        "total_resources": 1,
        "taggable_resources": 1,
        "tagging_rate": 1
      },
      "security": {
        "total_resources": 1,
        "taggable_resources": 1,
        "tagging_rate": 1
      },
      "subnet": {
        "total_resources": 1,
        "taggable_resources": 1,
        "tagging_rate": 1
      },
      "vpc": {
        "total_resources": 1,
        "taggable_resources": 1,
        "tagging_rate": 1
      }
    },
    "category_breakdown": {
      "taggable": 5
    }
  },
  "results": [
    {
      "resource_type": "aws_s3_bucket",
      "resource_name": "main",
      "file_path": "main.tf",
      "line_number": 72,
      "snippet": "resource \"aws_s3_bucket\" \"main\" {\n  bucket = \"${var.project_name}-${var.environment}-main-${random_string.suffix.result}\"\n\n  tags = merge(local.common_tags, {\n    Name         = \"${var.project_name}-${var.environment}-main\"\n    ResourceType = \"S3Bucket\"\n    Purpose      = \"main-storage\"\n  })\n}\n\n── Variable Resolutions ──\n\n  ${var.project_name} → terratag-simple-test\n\n  ${var.environment} → test\n\n  var.project_name → terratag-simple-test\n\n  var.environment → test\n\n  local.common_tags → map[CreatedAt:2024-01-01T00:00:00Z CreatedBy:terraform Environment:test Project:terratag-simple-test]\n\n  merge(...) → { Project = \"terratag-simple-test\", Name = \"${var.project_name}-${var.environment}-main\", Resourc...\n\n  ${var.project_name} → terratag-simple-test\n\n  ${var.environment} → test\n\n  var.project_name → terratag-simple-test\n\n  var.environment → test\n",
      "is_compliant": false,
      "supports_tagging": true,
      "tagging_capability": {
        "supports_tag_attribute": true,
        "tag_attribute_name": "tags",
        "provider_supported": true,
        "service": "s3",
        "category": "taggable",
        "reason": "Resource supports the 'tags' attribute"
      },
      "missing_tags": [
        "Environment",
        "Project",
        "Owner",
        "CostCenter",
        "ManagedBy",
        "DataClassification",
        "Compliance"
      ],
      "suggested_fixes": [
        {
          "tag_key": "Environment",
          "suggested_value": "Production",
          "action": "add",
          "reason": "Required tag 'Environment' is missing"
        },
        {
          "tag_key": "Project",
          "suggested_value": "terratag-test",
          "action": "add",
          "reason": "Required tag 'Project' is missing"
        },
        {
          "tag_key": "Owner",
          "suggested_value": "",
          "action": "add",
          "reason": "Required tag 'Owner' is missing"
        },
        {
          "tag_key": "CostCenter",
          "suggested_value": "CC-DEV-001",
          "action": "add",
          "reason": "Required tag 'CostCenter' is missing"
        },
        {
          "tag_key": "ManagedBy",
          "suggested_value": "Terraform",
          "action": "add",
          "reason": "Required tag 'ManagedBy' is missing"
        },
        {
          "tag_key": "DataClassification",
          "suggested_value": "internal",
          "action": "add",
          "reason": "Required tag 'DataClassification' is missing"
        },
        {
          "tag_key": "Compliance",
          "suggested_value": "pii",
          "action": "add",
          "reason": "Required tag 'Compliance' is missing"
        }
      ]
    },
    {
      "resource_type": "aws_vpc",
      "resource_name": "main",
      "file_path": "main.tf",
      "line_number": 90,
      "snippet": "resource \"aws_vpc\" \"main\" {\n  cidr_block           = \"10.0.0.0/16\"\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n\n  tags = merge(local.common_tags, {\n    Name         = \"${var.project_name}-${var.environment}-vpc\"\n    ResourceType = \"VPC\"\n    Purpose      = \"main-network\"\n  })\n}\n\n── Variable Resolutions ──\n\n  local.common_tags → map[CreatedAt:2024-01-01T00:00:00Z CreatedBy:terraform Environment:test Project:terratag-simple-test]\n\n  merge(...) → { CreatedBy = \"terraform\", Environment = \"test\", Project = \"terratag-simple-test\", Name = \"${var....\n\n  ${var.project_name} → terratag-simple-test\n\n  ${var.environment} → test\n\n  var.project_name → terratag-simple-test\n\n  var.environment → test\n",
      "is_compliant": false,
      "supports_tagging": true,
      "tagging_capability": {
        "supports_tag_attribute": true,
        "tag_attribute_name": "tags",
        "provider_supported": true,
        "service": "vpc",
        "category": "taggable",
        "reason": "Resource supports the 'tags' attribute"
      },
      "missing_tags": [
        "Environment",
        "Project",
        "Owner",
        "CostCenter",
        "ManagedBy"
      ],
      "suggested_fixes": [
        {
          "tag_key": "Environment",
          "suggested_value": "Production",
          "action": "add",
          "reason": "Required tag 'Environment' is missing"
        },
        {
          "tag_key": "Project",
          "suggested_value": "terratag-test",
          "action": "add",
          "reason": "Required tag 'Project' is missing"
        },
        {
          "tag_key": "Owner",
          "suggested_value": "",
          "action": "add",
          "reason": "Required tag 'Owner' is missing"
        },
        {
          "tag_key": "CostCenter",
          "suggested_value": "CC-DEV-001",
          "action": "add",
          "reason": "Required tag 'CostCenter' is missing"
        },
        {
          "tag_key": "ManagedBy",
          "suggested_value": "Terraform",
          "action": "add",
          "reason": "Required tag 'ManagedBy' is missing"
        }
      ]
    },
    {
      "resource_type": "aws_subnet",
      "resource_name": "main",
      "file_path": "main.tf",
      "line_number": 103,
      "snippet": "resource \"aws_subnet\" \"main\" {\n  vpc_id                  = aws_vpc.main.id\n  cidr_block              = \"10.0.1.0/24\"\n  availability_zone       = data.aws_availability_zones.available.names[0]\n  map_public_ip_on_launch = true\n\n  tags = merge(local.common_tags, {\n    Name         = \"${var.project_name}-${var.environment}-subnet\"\n    ResourceType = \"Subnet\"\n    Type         = \"Public\"\n  })\n}\n\n── Variable Resolutions ──\n\n  local.common_tags → map[CreatedAt:2024-01-01T00:00:00Z CreatedBy:terraform Environment:test Project:terratag-simple-test]\n\n  merge(...) → { Environment = \"test\", Project = \"terratag-simple-test\", Name = \"${var.project_name}-${var.envir...\n\n  ${var.project_name} → terratag-simple-test\n\n  ${var.environment} → test\n\n  var.project_name → terratag-simple-test\n\n  var.environment → test\n",
      "is_compliant": false,
      "supports_tagging": true,
      "tagging_capability": {
        "supports_tag_attribute": true,
        "tag_attribute_name": "tags",
        "provider_supported": true,
        "service": "subnet",
        "category": "taggable",
        "reason": "Resource supports the 'tags' attribute"
      },
      "missing_tags": [
        "Environment",
        "Project",
        "Owner",
        "CostCenter",
        "ManagedBy"
      ],
      "suggested_fixes": [
        {
          "tag_key": "Environment",
          "suggested_value": "Production",
          "action": "add",
          "reason": "Required tag 'Environment' is missing"
        },
        {
          "tag_key": "Project",
          "suggested_value": "terratag-test",
          "action": "add",
          "reason": "Required tag 'Project' is missing"
        },
        {
          "tag_key": "Owner",
          "suggested_value": "",
          "action": "add",
          "reason": "Required tag 'Owner' is missing"
        },
        {
          "tag_key": "CostCenter",
          "suggested_value": "CC-DEV-001",
          "action": "add",
          "reason": "Required tag 'CostCenter' is missing"
        },
        {
          "tag_key": "ManagedBy",
          "suggested_value": "Terraform",
          "action": "add",
          "reason": "Required tag 'ManagedBy' is missing"
        }
      ]
    },
    {
      "resource_type": "aws_security_group",
      "resource_name": "web",
      "file_path": "main.tf",
      "line_number": 117,
      "snippet": "resource \"aws_security_group\" \"web\" {\n  name        = \"${var.project_name}-${var.environment}-web\"\n  description = \"Security group for web servers\"\n  vpc_id      = aws_vpc.main.id\n\n  ingress {\n    from_port   = 80\n    to_port     = 80\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  ingress {\n    from_port   = 443\n    to_port     = 443\n    protocol    = \"tcp\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  egress {\n    from_port   = 0\n    to_port     = 0\n    protocol    = \"-1\"\n    cidr_blocks = [\"0.0.0.0/0\"]\n  }\n\n  tags = merge(local.common_tags, {\n    Name         = \"${var.project_name}-${var.environment}-web-sg\"\n    ResourceType = \"SecurityGroup\"\n    Purpose      = \"web-access\"\n  })\n}\n\n── Variable Resolutions ──\n\n  ${var.project_name} → terratag-simple-test\n\n  ${var.environment} → test\n\n  var.project_name → terratag-simple-test\n\n  var.environment → test\n\n  local.common_tags → map[CreatedAt:2024-01-01T00:00:00Z CreatedBy:terraform Environment:test Project:terratag-simple-test]\n\n  merge(...) → { Environment = \"test\", Project = \"terratag-simple-test\", CreatedAt = \"2024-01-01T00:00:00Z\", Cre...\n\n  ${var.project_name} → terratag-simple-test\n\n  ${var.environment} → test\n\n  var.project_name → terratag-simple-test\n\n  var.environment → test\n",
      "is_compliant": false,
      "supports_tagging": true,
      "tagging_capability": {
        "supports_tag_attribute": true,
        "tag_attribute_name": "tags",
        "provider_supported": true,
        "service": "security",
        "category": "taggable",
        "reason": "Resource supports the 'tags' attribute"
      },
      "missing_tags": [
        "Environment",
        "Project",
        "Owner",
        "CostCenter",
        "ManagedBy"
      ],
      "suggested_fixes": [
        {
          "tag_key": "Environment",
          "suggested_value": "Production",
          "action": "add",
          "reason": "Required tag 'Environment' is missing"
        },
        {
          "tag_key": "Project",
          "suggested_value": "terratag-test",
          "action": "add",
          "reason": "Required tag 'Project' is missing"
        },
        {
          "tag_key": "Owner",
          "suggested_value": "",
          "action": "add",
          "reason": "Required tag 'Owner' is missing"
        },
        {
          "tag_key": "CostCenter",
          "suggested_value": "CC-DEV-001",
          "action": "add",
          "reason": "Required tag 'CostCenter' is missing"
        },
        {
          "tag_key": "ManagedBy",
          "suggested_value": "Terraform",
          "action": "add",
          "reason": "Required tag 'ManagedBy' is missing"
        }
      ]
    },
    {
      "resource_type": "aws_instance",
      "resource_name": "web",
      "file_path": "main.tf",
      "line_number": 151,
      "snippet": "resource \"aws_instance\" \"web\" {\n  ami                    = data.aws_ami.amazon_linux.id\n  instance_type          = \"t3.micro\"\n  subnet_id              = aws_subnet.main.id\n  vpc_security_group_ids = [aws_security_group.web.id]\n\n  user_data = base64encode(\u003c\u003c-EOF\n              #!/bin/bash\n              yum update -y\n              yum install -y httpd\n              systemctl start httpd\n              systemctl enable httpd\n              echo \"\u003ch1\u003eHello from ${var.project_name}!\u003c/h1\u003e\" \u003e /var/www/html/index.html\n              EOF\n  )\n\n  tags = merge(local.common_tags, {\n    Name         = \"${var.project_name}-${var.environment}-web\"\n    ResourceType = \"EC2Instance\"\n    Purpose      = \"web-server\"\n    Backup       = \"daily\"\n  })\n}\n\n── Variable Resolutions ──\n\n  ${var.project_name} → terratag-simple-test\n\n  var.project_name → terratag-simple-test\n\n  local.common_tags → map[CreatedAt:2024-01-01T00:00:00Z CreatedBy:terraform Environment:test Project:terratag-simple-test]\n\n  merge(...) → { Environment = \"test\", Project = \"terratag-simple-test\", CreatedAt = \"2024-01-01T00:00:00Z\", Cre...\n\n  ${var.project_name} → terratag-simple-test\n\n  ${var.environment} → test\n\n  var.project_name → terratag-simple-test\n\n  var.environment → test\n",
      "is_compliant": false,
      "supports_tagging": true,
      "tagging_capability": {
        "supports_tag_attribute": true,
        "tag_attribute_name": "tags",
        "provider_supported": true,
        "service": "instance",
        "category": "taggable",
        "reason": "Resource supports the 'tags' attribute"
      },
      "missing_tags": [
        "Environment",
        "Project",
        "Owner",
        "CostCenter",
        "ManagedBy",
        "Backup",
        "Monitoring"
      ],
      "suggested_fixes": [
        {
          "tag_key": "Environment",
          "suggested_value": "Production",
          "action": "add",
          "reason": "Required tag 'Environment' is missing"
        },
        {
          "tag_key": "Project",
          "suggested_value": "terratag-test",
          "action": "add",
          "reason": "Required tag 'Project' is missing"
        },
        {
          "tag_key": "Owner",
          "suggested_value": "",
          "action": "add",
          "reason": "Required tag 'Owner' is missing"
        },
        {
          "tag_key": "CostCenter",
          "suggested_value": "CC-DEV-001",
          "action": "add",
          "reason": "Required tag 'CostCenter' is missing"
        },
        {
          "tag_key": "ManagedBy",
          "suggested_value": "Terraform",
          "action": "add",
          "reason": "Required tag 'ManagedBy' is missing"
        },
        {
          "tag_key": "Backup",
          "suggested_value": "none",
          "action": "add",
          "reason": "Required tag 'Backup' is missing"
        },
        {
          "tag_key": "Monitoring",
          "suggested_value": "basic",
          "action": "add",
          "reason": "Required tag 'Monitoring' is missing"
        }
      ]
    }
  ],
  "summary": {
    "compliance_rate": 0,
    "most_common_violations": null,
    "resource_type_breakdown": {
      "aws_instance": {
        "total": 1,
        "compliant": 0,
        "rate": 0
      },
      "aws_s3_bucket": {
        "total": 1,
        "compliant": 0,
        "rate": 0
      },
      "aws_security_group": {
        "total": 1,
        "compliant": 0,
        "rate": 0
      },
      "aws_subnet": {
        "total": 1,
        "compliant": 0,
        "rate": 0
      },
      "aws_vpc": {
        "total": 1,
        "compliant": 0,
        "rate": 0
      }
    }
  }
}